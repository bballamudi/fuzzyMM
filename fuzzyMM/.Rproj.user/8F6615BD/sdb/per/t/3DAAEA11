{
    "contents" : "\nimportEnviroCar = function(file) {\n  require(rjson) # fromJSON\n  require(maptools) # spCbind\n  require(rgdal) #readOGR\n  require(RCurl) #getURL\n  require(stringr) #str_replace_all\n  \n  # read data as spatial object:\n  layer = readOGR(getURL(file,ssl.verifypeer = FALSE), layer = \"OGRGeoJSON\")\n  \n  # convert time from text to POSIXct:\n  layer$time = as.POSIXct(layer$time, format=\"%Y-%m-%dT%H:%M:%SZ\")\n  # the third column is JSON, we want it in a table (data.frame) form:\n  # 1. form a list of lists\n  l1 = lapply(as.character(layer[[3]]), fromJSON)\n  # 2. parse the $value elements in the sublist:\n  l2 = lapply(l1,function(x) as.data.frame(lapply(x, function(X) X$value)))\n  # create a matrix with all columns and then convert it to a data frame\n  # thanks to Kristina Helle!\n  # dynamic parsing of phenomenon names and units\n  phenomenonsUrl = \"https://www.envirocar.org/api/stable/phenomenons\"\n  phenomenons = fromJSON(getURL(phenomenonsUrl,ssl.verifypeer = FALSE))\n\n  \n  colNames <- c(\"GPS.Bearing\", \"GPS.HDOP\", \"GPS.Speed\")\n  if (!all(colNames %in% names(l2[[1]]))) \n    stop(\"Track does not contain all the necessary data (GPS.Bearing, GPS.HDOP, GPS.Speed)\")\n  else\n    colNames <- names(l2[[1]])\n  \n    \n  resultMatrix = matrix(nrow = length(l2),ncol = length(colNames))\n  dimnames(resultMatrix)[[2]] = colNames\n  for (i in seq(along = l2))\n    resultMatrix[i,colNames] = as.numeric(l2[[i]])[match(colNames, names(l2[[i]]))]\n  result = as.data.frame(resultMatrix)\n  \n  # set the units:\n  units <- sapply(phenomenons[[1]], \"[[\", \"unit\")\n  names(units)=colNames\n  \n  # add a units attribute to layer\n  layer[[3]] = NULL\n  # add the table as attributes to the spatial object\n  if (length(layer) == nrow(result)) {\n    layer = spCbind(layer, result)\n    attr(layer, \"units\") = units\n    layer\n  } else\n    NULL\n}\n\nurl = \"https://envirocar.org/api/stable/tracks/52b45583e4b0f9afbd29bb6b\"  #200\nurl = \"https://envirocar.org/api/stable/tracks/52cf2af0e4b0f9afbde8149c\"  #20\nurl = \"https://envirocar.org/api/stable/tracks/52e399ffe4b0d8e8c2262da4\"  #95 schÃ¶nes ergebnis\nurl = \"https://envirocar.org/api/stable/tracks/528cf184e4b0a727145dd563\"  #rural\nurl = \"https://envirocar.org/api/stable/tracks/52f3836be4b0d8e8c27ed6f0\"  #urban\nurl = \"https://envirocar.org/api/stable/tracks/528cf18ee4b0a727145ddece\"  #motorway\nurl = \"https://envirocar.org/api/stable/tracks/52f3836be4b0d8e8c27ed6f0\" \nurl = \"https://envirocar.org/api/stable/tracks/52cbb887e4b0f9afbd8eafc2\"\nurl = \"https://envirocar.org/api/stable/tracks/52e39b02e4b0d8e8c22665c3\"\n\nlayer = readOGR(getURL(url, ssl.verifypeer = FALSE), layer = \"OGRGeoJSON\")\ntrack = importEnviroCar(url)\nwriteOGR(track, dsn =\"C:/Users/Niko/Desktop\", layer = \"track\", driver=\"ESRI Shapefile\")\nwriteOGR(track11, dsn =\"C:/Users/Niko/Desktop\", layer = \"track11\", driver=\"ESRI Shapefile\")\ntrack <- readOGR(\"C:/Users/Niko/Desktop/track.shp\", layer = \"track\")\ntrack1 <- readOGR(\"C:/Users/Niko/Desktop/track11.shp\", layer = \"track11\")\n\n\n\n\n\n\nget.shortest.paths(roads@g, \"1076966427\", \"2126609149\")\nunlist(get.shortest.paths(roads@g, \"992919352\", \"2055288636\"))\n\npar(new = T)\nplot(track$coords.x1[320:360], track$coords.x2[320:360], pch = 16, col=\"blue\")\npoints(track1$coords.x1[320:340], track1$coords.x2[320:340], pch=16, col = \"blue\")\npoints(track1$coords.x1[320:360], track1$coords.x2[320:360],pch=16, col = \"red\")\nplot(track$coords.x1, track$coords.x2, pch=16, col = \"blue\")\npoints(track1$coords.x1, track1$coords.x2,pch=16, col = \"red\")\npoints(edit_traj$coords.x1, edit_traj$coords.x2,pch=16, col = \"red\")\n\nlegend(\"bottomleft\",legend=c(\"Position from GPS\",\"Position from MM algorithm\"),\n       text.col=c(\"blue\",\"red\"),pch=c(16,16),col=c(\"blue\",\"red\"))\n\nlines(rec@polygons[[1]]@Polygons[[1]]@coord)\nlines(rec@polygons[[1]]@Polygons[[1]]@coords, col=\"red\", lwd = 2)\n\nlines(roads@sl, col=\"red\")\nlines(roads@sl, col=\"black\")\n\nlines(roads@sl@lines[[5446]]@Lines[[1]]@coords, col=\"red\")\nlines(roads@sl@lines[[5446]]@Lines[[1]]@coords, col=\"black\")\n\n\n\n",
    "created" : 1394102272125.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "164338833",
    "id" : "3DAAEA11",
    "lastKnownWriteTime" : 1394106057,
    "path" : "D:/Dropbox/Bachelorarbeit/importEnviroCar.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}