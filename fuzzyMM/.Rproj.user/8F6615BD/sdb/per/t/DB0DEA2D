{
    "contents" : "#' Map Matching\n#'\n#' Function that matches GPS trajectories to the OSM digital road network\n#' using a fuzzy logic map matching algorithm.\n#' \n#' @param traj \\link[sp]{SpatialPointsDataFrame-class} containing the GPS trajectories.\n#'              See Details for additional info.\n#' @param plot boolean. Matched trajectory will be plotted if true.\n#' \n#' @details\n#' \\bold{mm} is the main function of this package.\n#' The input to the function is a \\link[sp]{SpatialPointsDataFrame-class} \n#' containing the GPS trajectory that needs to be matched to a digital road network.\n#' \n#' To succesfully apply the map matching algorithm the data part of the \n#' trajectories must include data for HDOP, Speed and Bearing, with the columns \n#' named \"GPS.HDOP\", \"GPS.Speed\" and \"GPS.Bearing\" respectively.\n#' Values for GPS.Speed must be given in km/h.\n#' Missing values in the data will be replaced with zeros and can lead\n#' to incorrect matchings.\n#' \n#' The map data is obtained from OpenStreetMap. \n#' \n#' The algorithm consists of three major parts responsible for the identification of\n#' the links the vehicle is travelling on.\n#' \\itemize{\n#'   \\item Initial MapMatching Process (IMP)\n#'   \\item Subsequent MapMatching Process along a link (SMP-1)\n#'   \\item Subsequent MapMatching Process at a junction (SMP-2)\n#' }\n#' Each of this processes uses a Fuzzy Inference System (FIS) for the\n#' link identification.\n#' Input variables, fuzzy subsets and fuzzy rules for each FIS can be\n#' seen in \\code{\\link{FIS_IMP}}, \\code{\\link{FIS_SMP1}} and \n#' \\code{\\link{FIS_SMP2}} or by getting the corresponding \\code{\\link{frbs}}\n#' object using \\code{\\link{get_fis}}.\n#' \n#' A detailed description of the fuzzy logic map matching\n#' algorithm and the FIS can be found in Quddus (2006).\n#' \n#' \n#' \n#' @author Nikolai Gorte <n.gorte@@gmail.com>\n#' \n#'  @seealso\n#' \\code{\\link{FIS_IMP}}, \\code{\\link{FIS_SMP1}}, \\code{\\link{FIS_SMP2}},\n#' \\code{\\link{get_fis}}, \\code{\\link{frbs}}\n#' \n#' @references\n#' Quddus, M. A. 2006 (January). \\emph{High Integrity Map Matching Algorithms \n#' for Advanced Transport Telematics Applications}. Ph.D. thesis, \n#' Imperial College London, United Kingdom.\n#' \n#' \n#' @examples\n#' data(traj)\n#' matched_traj <- mm(traj, plot = TRUE)\n#' \n#' @export \nmm <- function(traj, plot = FALSE) {\n  if (!is(traj, \"SpatialPointsDataFrame\")) \n    stop (\"Not a SpatialPointsDataFrame object!\")\n  if (is.null(proj4string(traj)))\n    stop (\"No projection specified!\")\n  if (!all(c(\"GPS.Bearing\", \"GPS.HDOP\", \"GPS.Speed\") %in% names(traj))) \n    stop(\"Trajectory does not contain all the necessary data (GPS.Bearing, GPS.HDOP, GPS.Speed)!\")\n  if (!is(traj$time, \"POSIXct\") && !is(traj$time, \"POSIXlt\"))\n    stop (\"time must be of class POSIXct or POSIXlt!\")\n  \n  traj <- spTransform(traj, osm_crs())\n  traj@data[is.na(traj@data)] <- 0\n  bbox <- bbox(traj)\n  \n  # Create digital road network\n  roads <- create_drn(bbox)\n\n  traj <- as(traj, \"data.frame\")\n  traj$OSM_ID <- 0\n  \n  # Execute the Initial Map-Matching Process (IMP)\n  list <- imp(traj, roads)\n  edit_traj <- list$traj\n  pt_index <- list$index\n  current_link <- list$current_link\n  \n  # Map match remainig points using SMP1 and SMP2\n  for (j in pt_index:nrow(edit_traj)) {\n    # Check the possibility of matching the next point on the current link\n    pred_val <- smp1(edit_traj, roads, current_link, pt_index)$predicted.val\n    if (pred_val >= 60) {\n      PD <- dist2Line(edit_traj[,c(\"coords.x1\", \"coords.x2\")][pt_index,], \n                      roads@sl@lines[[current_link$edge_id]]@Lines[[1]]@coords)\n      edit_traj$coords.x1[pt_index] <- PD[2]\n      edit_traj$coords.x2[pt_index] <- PD[3]\n      edit_traj$OSM_ID[pt_index] <- traj$OSM_ID[pt_index - 1]\n      pt_index <- pt_index + 1\n    } else {\n      current_link <- smp2(edit_traj, roads, current_link, pt_index)\n      edit_traj$coords.x1[pt_index] <- current_link$NP_x\n      edit_traj$coords.x2[pt_index] <- current_link$NP_y\n      edit_traj$OSM_ID[pt_index] <- E(roads@g)[current_link$edge_id]$name\n      pt_index <- pt_index + 1\n    }\n  }\n  \n data <- edit_traj[,!names(edit_traj) %in% c(\"coords.x1\", \"coords.x2\")]\n matched_coords <- edit_traj[,c(\"coords.x1\", \"coords.x2\")]\n matched_traj <- SpatialPointsDataFrame(matched_coords, data, proj4string=osm_crs())\n \n if (plot) {\n   plot(traj$coords.x1, traj$coords.x2, pch = 16, col = \"blue\")\n   points(matched_traj$coords.x1, matched_traj$coords.x2,pch = 16, col = \"red\")\n   lines(roads@sl)\n }\n matched_traj\n}\n\n\n\n\n\n\n",
    "created" : 1386162686893.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "78233326",
    "id" : "DB0DEA2D",
    "lastKnownWriteTime" : 1394216558,
    "path" : "D:/Dropbox/Bachelorarbeit/package/fuzzyMM/R/fuzzyMM.R",
    "project_path" : "R/fuzzyMM.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}